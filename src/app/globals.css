@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  height: 100%;
}

main {
  min-height: 100%;
}

.unit-shadow {
  box-shadow: -1.5px 1.5px rgb(55 65 81 / 1), -1px 1px rgb(55 65 81 / 1),
    -0.5px 0.5px rgb(55 65 81 / 1);
}

@layer utilities {
  .hexagon {
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  }
}

.dice {
  transform: translateZ(-25px);
  transition: transform 1s;
}

.dice__face {
  border-radius: 16px;
}

.dice__face::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  border-radius: 16px;
  background: #f6f3f0;
  transform: translateZ(-1px);
}

.dice__face::after {
  position: absolute;
  content: "";
  top: 50%;
  left: 50%;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: #131210;
}

.dice__face--front {
  transform: rotateX(0deg) rotateY(0deg) translateZ(25px);
}

.dice__face--right {
  transform: rotateX(0deg) rotateY(90deg) translateZ(25px);
}

.dice__face--back {
  transform: rotateX(0deg) rotateY(180deg) translateZ(25px);
}

.dice__face--left {
  transform: rotateX(0deg) rotateY(-90deg) translateZ(25px);
}

.dice__face--top {
  transform: rotateY(0deg) rotateX(90deg) translateZ(25px);
}

.dice__face--bottom {
  transform: rotate(0deg) rotateX(-90deg) translateZ(25px);
}

.dice.show-front {
  animation: dicespin-front 1s ease-in forwards;
}

.dice.show-right {
  animation: dicespin-right 1s ease-in forwards;
}

.dice.show-back {
  animation: dicespin-back 1s ease-in forwards;
}

.dice.show-left {
  animation: dicespin-left 1s ease-in forwards;
}

.dice.show-top {
  animation: dicespin-top 1s ease-in forwards;
}

.dice.show-bottom {
  animation: dicespin-bottom 1s ease-in forwards;
}

.dice.start {
  transform: translateZ(-25px) rotateX(90deg) rotateY(0);
}

@keyframes dicespin-front {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg);
  }
}

@keyframes dicespin-right {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateY(-450deg) rotateX(360deg);
  }
}

@keyframes dicespin-back {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateY(-540deg) rotateX(360deg);
  }
}

@keyframes dicespin-left {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateY(450deg) rotateX(360deg);
  }
}

@keyframes dicespin-top {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateX(-450deg) rotateY(360deg);
  }
}

@keyframes dicespin-bottom {
  0% {
    transform: translateZ(-25px) rotateY(360deg) rotateX(360deg)
      translateY(-5px);
  }

  95% {
    transform: translateZ(-25px) rotateY(-360deg) rotateX(-360deg) translateY(0);
  }

  100% {
    transform: translateZ(-25px) rotateX(450deg) rotateY(360deg);
  }
}
